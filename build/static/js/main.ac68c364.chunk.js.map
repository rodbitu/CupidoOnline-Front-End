{"version":3,"sources":["libs/contextLib.js","libs/errorLib.js","containers/Home/img/cupido.png","components/LoaderButton/LoaderButton.js","config.js","containers/NewMessage/NewMessage.js","containers/Home/Home.js","containers/NotFound/NotFound.js","libs/hooksLib.js","containers/Login/Login.js","containers/ResetPassword/ResetPassword.js","containers/Settings/Settings.js","containers/ChangePassword/ChangePassword.js","containers/Register/Register.js","libs/awsLib.js","containers/Messages/Messages.js","components/AuthenticatedRoute/AuthenticatedRoute.js","components/UnauthenticatedRoute/UnauthenticatedRoute.js","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","createContext","useAppContext","useContext","onError","error","message","toString","Error","alert","LoaderButton","isLoading","className","disabled","props","Button","children","config","MAX_ATTACHMENT_SIZE","s3","REGION","BUCKET","apiGateway","URL","cognito","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","NewMessage","file","useRef","history","useHistory","useState","email","setEmail","name","setName","content","setContent","setIsLoading","event","a","preventDefault","current","size","console","log","createMessage","push","API","post","body","Form","onSubmit","Group","controlId","Label","Control","as","onChange","e","target","value","placeholder","htmlFor","block","type","length","Home","setMessages","isAuthenticated","loadMessages","get","useEffect","messages","onLoad","ListGroup","src","Icon","NotFound","useFormFields","initialState","fields","setValues","id","Login","userHasAuthenticated","password","handleFieldChange","Auth","signIn","autoFocus","to","ResetPassword","code","confirmPassword","codeSent","setCodeSent","confirmed","setConfirmed","isConfirming","setIsConfirming","isSendingCode","setIsSendingCode","handleSendCodeClick","forgotPassword","handleConfirmClick","forgotPasswordSubmit","FormGroup","bsSize","FormLabel","FormControl","Text","Settings","variant","ChangePassword","oldPassword","isChanging","setIsChanging","currentAuthenticatedUser","currentUser","changePassword","Register","confirmationCode","newUser","setNewUser","handleSubmit","signUp","username","handleConfirmationSubmit","confirmSignUp","muted","s3Upload","filename","Date","now","Storage","vault","put","contentType","stored","key","Messages","useParams","setMessage","saveMessage","attachment","deleteMessage","del","window","confirm","setIsDeleting","loadMessage","attachmentURL","str","isDeleting","rel","href","replace","files","onClick","AuthenticatedRoute","rest","useLocation","pathname","search","UnauthenticatedRoute","redirect","url","location","results","RegExp","exec","decodeURIComponent","querystring","Routes","exact","path","App","isAuthenticating","setIsAuthenticating","signOut","currentSession","Navbar","collapseOnSelect","bg","expand","Brand","Toggle","Collapse","Nav","activeKey","Link","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Amplify","configure","mandatorySignIn","region","userPoolId","identityPoolId","userPoolWebClientId","bucket","endpoints","endpoint","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac68c364.chunk.js","sourcesContent":["import { useContext, createContext } from \"react\";\r\n\r\nexport const AppContext = createContext(null);\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}","export function onError(error) {\r\n    let message = error.toString();\r\n  \r\n    if (!(error instanceof Error) && error.message) {\r\n      message = error.message;\r\n    }\r\n  \r\n    alert(message);\r\n  }","export default __webpack_public_path__ + \"static/media/cupido.f4f9a264.png\";","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { BsArrowRepeat } from \"react-icons/bs\";\r\nimport \"./LoaderButton.css\";\r\n\r\nexport default function LoaderButton({\r\n  isLoading,\r\n  className = \"\",\r\n  disabled = false,\r\n  ...props\r\n}) {\r\n  return (\r\n    <Button\r\n      disabled={disabled || isLoading}\r\n      className={`LoaderButton ${className}`}\r\n      {...props}\r\n    >\r\n      {isLoading && <BsArrowRepeat className=\"spinning\" />}\r\n      {props.children}\r\n    </Button>\r\n  );\r\n}","const config = {\r\n  \r\n  MAX_ATTACHMENT_SIZE: 5000000,\r\n\r\n    s3: {\r\n      REGION: \"us-east-1\",\r\n      BUCKET: \"cupido-upload\",\r\n    },\r\n    apiGateway: {\r\n      REGION: \"us-east-1\",\r\n      URL: \"https://zc46dq1xyd.execute-api.us-east-1.amazonaws.com/prod\",\r\n    },\r\n    cognito: {\r\n      REGION: \"us-east-1\",\r\n      USER_POOL_ID: \"us-east-1_JVkW8ZoYV\",\r\n      APP_CLIENT_ID: \"2g2gi9i3jii4dk0l33g9er8h96\",\r\n      IDENTITY_POOL_ID: \"us-east-1:809884b8-6598-4222-a9c3-c157e36827d3\",\r\n    },\r\n  };\r\n  \r\n  export default config;","import React, { useRef, useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoaderButton from \"../../components/LoaderButton/LoaderButton\";\r\nimport { onError } from \"../../libs/errorLib\";\r\nimport config from \"../../config\";\r\nimport { API } from \"aws-amplify\";\r\nimport \"./NewMessage.css\";\r\n\r\nexport default function NewMessage() {\r\n  const file = useRef(null);\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  function validateForm() {\r\n    return content.length > 0;\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n  \r\n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\r\n      alert(\r\n        `Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE /\r\n          1000000} MB.`\r\n      );\r\n      return;\r\n    }\r\n  \r\n    setIsLoading(true);\r\n    console.log(email, name, content)\r\n    try {\r\n      await createMessage({ content });\r\n      alert(\"Mensagem enviada!\");\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      onError(e);\r\n      alert(\"Mensagem não enviada!\");\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n  \r\n  function createMessage() {\r\n    return API.post(\"messages\", \"/messages\", {\r\n      body: {\r\n        name,\r\n        email,\r\n        content\r\n      }\r\n    });\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className=\"containerNM\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            as=\"input\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            placeholder=\"Email de crush..\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Nome</Form.Label>\r\n          <Form.Control\r\n            as=\"input\"\r\n            onChange={(e) => setName(e.target.value)}\r\n            placeholder=\"Nome de seu crush..\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"content\">\r\n        <label htmlFor=\"mensagem\">Mensagem</label>\r\n        <textarea\r\n          as=\"textarea\"\r\n          onChange={(e) => setContent(e.target.value)}\r\n          placeholder=\"Mensagem romântica para seu crush..\"\r\n        ></textarea>\r\n        </Form.Group>\r\n        <LoaderButton block size=\"lg\" type=\"submit\" isLoading={isLoading}\r\n          disabled={!validateForm()}>\r\n          Enviar\r\n        </LoaderButton>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { useAppContext } from \"../../libs/contextLib\";\r\nimport { onError } from \"../../libs/errorLib\";\r\nimport \"./Home.css\";\r\nimport { API } from \"aws-amplify\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport Icon from './img/cupido.png'\r\nimport NewMessage from \"../NewMessage/NewMessage\";\r\n\r\nexport default function Home() {\r\n  const [messages, setMessages] = useState([]);\r\n  const { isAuthenticated } = useAppContext();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function onLoad() {\r\n      if (!isAuthenticated) {\r\n        return;\r\n      }\r\n  \r\n      try {\r\n        const messages = await loadMessages();\r\n        setMessages(messages);\r\n      } catch (e) {\r\n        onError(e);\r\n      }\r\n  \r\n      setIsLoading(false);\r\n    }\r\n  \r\n    onLoad();\r\n  }, [isAuthenticated]);\r\n\r\n  function loadMessages() {\r\n    return API.get(\"messages\", \"/messages\");\r\n  }\r\n\r\n\r\n  function renderMessagesList(messages) {\r\n    return (\r\n      <>\r\n        <NewMessage />\r\n      </>\r\n    );\r\n  }\r\n\r\n  function renderLander() {\r\n    return (\r\n      <div className=\"lander\">\r\n        <img src={Icon}></img>\r\n        <h1>Cupido Online</h1>\r\n        <p className=\"text-muted\">O Cupido Online é um site para você ter uma conexão com seu par ideal!</p>\r\n        <p className=\"text-muted\">Mostre seu carinho por alguém enviando um email a essa pessoa..</p>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderMessages() {\r\n    return (\r\n      <div className=\"messages\">\r\n        <h2 className=\"pb-3 mt-4 mb-3 border-bottom\">Crie uma mensagem para seu crush</h2>\r\n        <ListGroup>{!isLoading && renderMessagesList(messages)}</ListGroup>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      {isAuthenticated ? renderMessages() : renderLander()}\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport \"./NotFound.css\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div className=\"NotFound text-center\">\r\n      <h3>Desculpe, página não encontrada!</h3>\r\n    </div>\r\n  );\r\n}","import { useState } from \"react\";\r\n\r\nexport function useFormFields(initialState) {\r\n  const [fields, setValues] = useState(initialState);\r\n\r\n  return [\r\n    fields,\r\n    function(event) {\r\n      setValues({\r\n        ...fields,\r\n        [event.target.id]: event.target.value\r\n      });\r\n    }\r\n  ];\r\n}","import React, { useState } from \"react\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport LoaderButton from \"../../components/LoaderButton/LoaderButton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAppContext } from \"../../libs/contextLib\";\r\nimport { useFormFields } from \"../../libs/hooksLib\";\r\nimport { onError } from \"../../libs/errorLib\";\r\nimport \"./Login.css\";\r\n\r\nexport default function Login() {\r\n  const { userHasAuthenticated } = useAppContext();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  function validateForm() {\r\n    return fields.email.length > 0 && fields.password.length > 0;\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await Auth.signIn(fields.email, fields.password);\r\n      userHasAuthenticated(true);\r\n    } catch (e) {\r\n      onError(e);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"containerNM\">\r\n    <div className=\"Login\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group size=\"lg\" controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"email\"\r\n            value={fields.email}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"password\">\r\n          <Form.Label>Senha</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={fields.password}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </Form.Group>\r\n        <LoaderButton\r\n          block\r\n          size=\"lg\"\r\n          type=\"submit\"\r\n          isLoading={isLoading}\r\n          disabled={!validateForm()}\r\n        >\r\n          Login\r\n        </LoaderButton>\r\n        <Link to=\"/login/reset\">Esqueceu sua senha?</Link>\r\n      </Form>\r\n    </div>\r\n    </div>\r\n  );\r\n}","import React, { useState } from \"react\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  FormLabel,\r\n} from \"react-bootstrap\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport { BiCheck } from \"react-icons/bi\";\r\nimport LoaderButton from \"../../components/LoaderButton/LoaderButton\";\r\nimport { useFormFields } from \"../../libs/hooksLib\";\r\nimport { onError } from \"../../libs/errorLib\";\r\nimport \"./ResetPassword.css\";\r\n\r\nexport default function ResetPassword() {\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    code: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [codeSent, setCodeSent] = useState(false);\r\n  const [confirmed, setConfirmed] = useState(false);\r\n  const [isConfirming, setIsConfirming] = useState(false);\r\n  const [isSendingCode, setIsSendingCode] = useState(false);\r\n\r\n  function validateCodeForm() {\r\n    return fields.email.length > 0;\r\n  }\r\n\r\n  function validateResetForm() {\r\n    return (\r\n      fields.code.length > 0 &&\r\n      fields.password.length > 0 &&\r\n      fields.password === fields.confirmPassword\r\n    );\r\n  }\r\n\r\n  async function handleSendCodeClick(event) {\r\n    event.preventDefault();\r\n\r\n    setIsSendingCode(true);\r\n\r\n    try {\r\n      await Auth.forgotPassword(fields.email);\r\n      setCodeSent(true);\r\n    } catch (error) {\r\n      onError(error);\r\n      setIsSendingCode(false);\r\n    }\r\n  }\r\n\r\n  async function handleConfirmClick(event) {\r\n    event.preventDefault();\r\n\r\n    setIsConfirming(true);\r\n\r\n    try {\r\n      await Auth.forgotPasswordSubmit(\r\n        fields.email,\r\n        fields.code,\r\n        fields.password\r\n      );\r\n      setConfirmed(true);\r\n    } catch (error) {\r\n      onError(error);\r\n      setIsConfirming(false);\r\n    }\r\n  }\r\n\r\n  function renderRequestCodeForm() {\r\n    return (\r\n      <form onSubmit={handleSendCodeClick}>\r\n        <FormGroup bsSize=\"large\" controlId=\"email\">\r\n          <FormLabel>Email</FormLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"email\"\r\n            value={fields.email}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </FormGroup>\r\n        <LoaderButton\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n          isLoading={isSendingCode}\r\n          disabled={!validateCodeForm()}\r\n        >\r\n          Enviar Confirmação\r\n        </LoaderButton>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  function renderConfirmationForm() {\r\n    return (\r\n      <form onSubmit={handleConfirmClick}>\r\n        <FormGroup bsSize=\"large\" controlId=\"code\">\r\n          <FormLabel>Código de Confirmação</FormLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"tel\"\r\n            value={fields.code}\r\n            onChange={handleFieldChange}\r\n          />\r\n          <Form.Text>\r\n            Por Favor check seu Email ({fields.email}) para confirmação do código.\r\n          </Form.Text>\r\n        </FormGroup>\r\n        <hr />\r\n        <FormGroup bsSize=\"large\" controlId=\"password\">\r\n          <FormLabel>Nova Senha</FormLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            value={fields.password}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup bsSize=\"large\" controlId=\"confirmPassword\">\r\n          <FormLabel>Confirmar Senha</FormLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            value={fields.confirmPassword}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </FormGroup>\r\n        <LoaderButton\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n          isLoading={isConfirming}\r\n          disabled={!validateResetForm()}\r\n        >\r\n          Confirme\r\n        </LoaderButton>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  function renderSuccessMessage() {\r\n    return (\r\n      <div className=\"success\">\r\n        <BiCheck />\r\n        <p>Sua senha foi resetada.</p>\r\n        <p>\r\n          <Link to=\"/login\">\r\n            Clique aqui para fazer login com suas novas credenciais.\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"ResetPassword\">\r\n      {!codeSent\r\n        ? renderRequestCodeForm()\r\n        : !confirmed\r\n        ? renderConfirmationForm()\r\n        : renderSuccessMessage()}\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { API } from \"aws-amplify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { onError } from \"../../libs/errorLib\";\r\nimport config from \"../../config\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport LoaderButton from \"../../components/LoaderButton/LoaderButton\";\r\n\r\nexport default function Settings() {\r\n  const history = useHistory();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  return (\r\n    <div className=\"Settings\">\r\n      <center>\r\n      <LinkContainer to=\"/settings/password\">\r\n        <LoaderButton variant=\"primary\">\r\n          Mudar Senha\r\n        </LoaderButton>\r\n      </LinkContainer>\r\n      <hr />\r\n      </center>\r\n    </div>\r\n  );\r\n}","import React, { useState } from \"react\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\r\nimport LoaderButton from \"../../components/LoaderButton/LoaderButton\";\r\nimport { useFormFields } from \"../../libs/hooksLib\";\r\nimport { onError } from \"../../libs/errorLib\";\r\nimport \"./ChangePassword.css\";\r\n\r\nexport default function ChangePassword() {\r\n  const history = useHistory();\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    password: \"\",\r\n    oldPassword: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [isChanging, setIsChanging] = useState(false);\r\n\r\n  function validateForm() {\r\n    return (\r\n      fields.oldPassword.length > 0 &&\r\n      fields.password.length > 0 &&\r\n      fields.password === fields.confirmPassword\r\n    );\r\n  }\r\n\r\n  async function handleChangeClick(event) {\r\n    event.preventDefault();\r\n\r\n    setIsChanging(true);\r\n\r\n    try {\r\n      const currentUser = await Auth.currentAuthenticatedUser();\r\n      await Auth.changePassword(\r\n        currentUser,\r\n        fields.oldPassword,\r\n        fields.password\r\n      );\r\n      alert(\"Senha Alterada\");\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      onError(error);\r\n      setIsChanging(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"ChangePassword\">\r\n      <form onSubmit={handleChangeClick}>\r\n        <FormGroup bsSize=\"large\" controlId=\"oldPassword\">\r\n          <FormLabel>Senha antiga</FormLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            onChange={handleFieldChange}\r\n            value={fields.oldPassword}\r\n          />\r\n        </FormGroup>\r\n        <hr />\r\n        <FormGroup bsSize=\"large\" controlId=\"password\">\r\n          <FormLabel>Nova senha</FormLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            onChange={handleFieldChange}\r\n            value={fields.password}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup bsSize=\"large\" controlId=\"confirmPassword\">\r\n          <FormLabel>Confirmar senha</FormLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            onChange={handleFieldChange}\r\n            value={fields.confirmPassword}\r\n          />\r\n        </FormGroup>\r\n        <LoaderButton\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n          disabled={!validateForm()}\r\n          isLoading={isChanging}\r\n        >\r\n          Change Password\r\n        </LoaderButton>\r\n      </form>\r\n    </div>\r\n  );\r\n}","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoaderButton from \"../../components/LoaderButton/LoaderButton\";\r\nimport { useAppContext } from \"../../libs/contextLib\";\r\nimport { useFormFields } from \"../../libs/hooksLib\";\r\nimport { onError } from \"../../libs/errorLib\";\r\nimport \"./Register.css\";\r\nimport { Auth } from \"aws-amplify\";\r\n\r\nexport default function Register() {\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    confirmationCode: \"\",\r\n  });\r\n  const history = useHistory();\r\n  const [newUser, setNewUser] = useState(null);\r\n  const { userHasAuthenticated } = useAppContext();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  function validateForm() {\r\n    return (\r\n      fields.email.length > 0 &&\r\n      fields.password.length > 0 &&\r\n      fields.password === fields.confirmPassword\r\n    );\r\n  }\r\n\r\n  function validateConfirmationForm() {\r\n    return fields.confirmationCode.length > 0;\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n  \r\n    setIsLoading(true);\r\n  \r\n    try {\r\n      const newUser = await Auth.signUp({\r\n        username: fields.email,\r\n        password: fields.password,\r\n      });\r\n      setIsLoading(false);\r\n      setNewUser(newUser);\r\n    } catch (e) {\r\n      onError(e);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n  \r\n  async function handleConfirmationSubmit(event) {\r\n    event.preventDefault();\r\n  \r\n    setIsLoading(true);\r\n  \r\n    try {\r\n      await Auth.confirmSignUp(fields.email, fields.confirmationCode);\r\n      await Auth.signIn(fields.email, fields.password);\r\n  \r\n      userHasAuthenticated(true);\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      onError(e);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  function renderConfirmationForm() {\r\n    return (\r\n      <Form onSubmit={handleConfirmationSubmit}>\r\n        <Form.Group controlId=\"confirmationCode\" size=\"lg\">\r\n          <Form.Label>Confirmation Code</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"tel\"\r\n            onChange={handleFieldChange}\r\n            value={fields.confirmationCode}\r\n          />\r\n          <Form.Text muted>Please check your email for the code.</Form.Text>\r\n        </Form.Group>\r\n        <LoaderButton\r\n          block\r\n          size=\"lg\"\r\n          type=\"submit\"\r\n          variant=\"success\"\r\n          isLoading={isLoading}\r\n          disabled={!validateConfirmationForm()}\r\n        >\r\n          Verify\r\n        </LoaderButton>\r\n      </Form>\r\n    );\r\n  }\r\n\r\n  function renderForm() {\r\n    return (\r\n      <div className=\"containerNM\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"email\" size=\"lg\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"email\"\r\n            value={fields.email}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\" size=\"lg\">\r\n          <Form.Label>Senha</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={fields.password}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"confirmPassword\" size=\"lg\">\r\n          <Form.Label>Confirmar Senha</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            onChange={handleFieldChange}\r\n            value={fields.confirmPassword}\r\n          />\r\n        </Form.Group>\r\n        <LoaderButton\r\n          block\r\n          size=\"lg\"\r\n          type=\"submit\"\r\n          isLoading={isLoading}\r\n          disabled={!validateForm()}\r\n        >\r\n          Registrar\r\n        </LoaderButton>\r\n      </Form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"Signup\">\r\n      {newUser === null ? renderForm() : renderConfirmationForm()}\r\n    </div>\r\n  );\r\n}","import { Storage } from \"aws-amplify\";\r\n\r\nexport async function s3Upload(file) {\r\n  const filename = `${Date.now()}-${file.name}`;\r\n\r\n  const stored = await Storage.vault.put(filename, file, {\r\n    contentType: file.type,\r\n  });\r\n\r\n  return stored.key;\r\n}","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport { onError } from \"../../libs/errorLib\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport LoaderButton from \"../../components/LoaderButton/LoaderButton\";\r\nimport config from \"../../config\";\r\nimport \"./Messages.css\";\r\nimport { s3Upload } from \"../../libs/awsLib\";\r\n\r\nexport default function Messages() {\r\n  const file = useRef(null);\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [message, setMessage] = useState(null);\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    function loadMessage() {\r\n      return API.get(\"messages\", `/messages/${id}`);\r\n    }\r\n\r\n    async function onLoad() {\r\n      try {\r\n        const message = await loadMessage();\r\n        const { content, attachment } = message;\r\n\r\n        if (attachment) {\r\n          message.attachmentURL = await Storage.vault.get(attachment);\r\n        }\r\n\r\n        setContent(content);\r\n        setMessage(message);\r\n      } catch (e) {\r\n        onError(e);\r\n      }\r\n    }\r\n\r\n    onLoad();\r\n  }, [id]);\r\n\r\n  function validateForm() {\r\n    return content.length > 0;\r\n  }\r\n  \r\n  function formatFilename(str) {\r\n    return str.replace(/^\\w+-/, \"\");\r\n  }\r\n  \r\n  function handleFileChange(event) {\r\n    file.current = event.target.files[0];\r\n  }\r\n  \r\n  function saveMessage(message) {\r\n    return API.put(\"messages\", `/messages/${id}`, {\r\n      body: message\r\n    });\r\n  }\r\n  \r\n  async function handleSubmit(event) {\r\n    let attachment;\r\n  \r\n    event.preventDefault();\r\n  \r\n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\r\n      alert(\r\n        `Please pick a file smaller than ${\r\n          config.MAX_ATTACHMENT_SIZE / 1000000\r\n        } MB.`\r\n      );\r\n      return;\r\n    }\r\n  \r\n    setIsLoading(true);\r\n  \r\n    try {\r\n      if (file.current) {\r\n        attachment = await s3Upload(file.current);\r\n      }\r\n  \r\n      await saveMessage({\r\n        content,\r\n        attachment: attachment || message.attachment\r\n      });\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      onError(e);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  function deleteMessage() {\r\n    return API.del(\"messages\", `/messages/${id}`);\r\n  }\r\n  \r\n  async function handleDelete(event) {\r\n    event.preventDefault();\r\n  \r\n    const confirmed = window.confirm(\r\n      \"Are you sure you want to delete this message?\"\r\n    );\r\n  \r\n    if (!confirmed) {\r\n      return;\r\n    }\r\n  \r\n    setIsDeleting(true);\r\n  \r\n    try {\r\n      await deleteMessage();\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      onError(e);\r\n      setIsDeleting(false);\r\n    }\r\n  }\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  \r\n  return (\r\n    <div className=\"Messages\">\r\n      {message && (\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group controlId=\"content\">\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              value={content}\r\n              onChange={(e) => setContent(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"file\">\r\n            <Form.Label>Attachment</Form.Label>\r\n            {message.attachment && (\r\n              <p>\r\n                <a\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  href={message.attachmentURL}\r\n                >\r\n                  {formatFilename(message.attachment)}\r\n                </a>\r\n              </p>\r\n            )}\r\n            <Form.Control onChange={handleFileChange} type=\"file\" />\r\n          </Form.Group>\r\n          <LoaderButton\r\n            block\r\n            size=\"lg\"\r\n            type=\"submit\"\r\n            isLoading={isLoading}\r\n            disabled={!validateForm()}\r\n          >\r\n            Save\r\n          </LoaderButton>\r\n          <LoaderButton\r\n            block\r\n            size=\"lg\"\r\n            variant=\"danger\"\r\n            onClick={handleDelete}\r\n            isLoading={isDeleting}\r\n          >\r\n            Delete\r\n          </LoaderButton>\r\n        </Form>\r\n      )}\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\r\nimport { useAppContext } from \"../../libs/contextLib\";\r\n\r\nexport default function AuthenticatedRoute({ children, ...rest }) {\r\n  const { pathname, search } = useLocation();\r\n  const { isAuthenticated } = useAppContext();\r\n  return (\r\n    <Route {...rest}>\r\n      {isAuthenticated ? (\r\n        children\r\n      ) : (\r\n        <Redirect to={\r\n          `/login?redirect=${pathname}${search}`\r\n        } />\r\n      )}\r\n    </Route>\r\n  );\r\n}","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAppContext } from \"../../libs/contextLib\";\r\n\r\nfunction querystring(name, url = window.location.href) {\r\n  name = name.replace(/[[]]/g, \"\\\\$&\");\r\n\r\n  const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\", \"i\");\r\n  const results = regex.exec(url);\r\n\r\n  if (!results) {\r\n    return null;\r\n  }\r\n  if (!results[2]) {\r\n    return \"\";\r\n  }\r\n\r\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n}\r\n\r\nexport default function UnauthenticatedRoute({ children, ...rest }) {\r\n  const { isAuthenticated } = useAppContext();\r\n  const redirect = querystring(\"redirect\");\r\n  return (\r\n    <Route {...rest}>\r\n      {!isAuthenticated ? (\r\n        children\r\n      ) : (\r\n        <Redirect to={redirect === \"\" || redirect === null ? \"/\" : redirect} />\r\n      )}\r\n    </Route>\r\n  );\r\n}","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./containers/Home/Home\";\r\nimport NotFound from \"./containers/NotFound/NotFound\";\r\nimport Login from \"./containers/Login/Login\";\r\nimport ResetPassword from \"./containers/ResetPassword/ResetPassword\";\r\nimport Settings from \"./containers/Settings/Settings\";\r\nimport ChangePassword from \"./containers/ChangePassword/ChangePassword\";\r\nimport Register from \"./containers/Register/Register\";\r\nimport NewMessage from \"./containers/NewMessage/NewMessage\";\r\nimport Messages from \"./containers/Messages/Messages\";\r\nimport AuthenticatedRoute from \"./components/AuthenticatedRoute/AuthenticatedRoute\";\r\nimport UnauthenticatedRoute from \"./components/UnauthenticatedRoute/UnauthenticatedRoute\";\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <Home />\r\n      </Route>\r\n      <UnauthenticatedRoute exact path=\"/login\">\r\n        <Login />\r\n      </UnauthenticatedRoute>\r\n      <UnauthenticatedRoute exact path=\"/login/reset\">\r\n        <ResetPassword />\r\n      </UnauthenticatedRoute>\r\n      <Route exact path=\"/settings\">\r\n        <Settings />\r\n      </Route>\r\n      <AuthenticatedRoute exact path=\"/settings/password\">\r\n        <ChangePassword />\r\n      </AuthenticatedRoute>\r\n      <UnauthenticatedRoute exact path=\"/register\">\r\n        <Register />\r\n      </UnauthenticatedRoute>\r\n      <AuthenticatedRoute exact path=\"/messages/new\">\r\n        <NewMessage />\r\n      </AuthenticatedRoute>\r\n      <AuthenticatedRoute exact path=\"/messages/:id\">\r\n        <Messages />\r\n      </AuthenticatedRoute>\r\n      <Route>\r\n        <NotFound />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport \"./App.css\";\nimport Routes from \"./Routes\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { AppContext } from \"./libs/contextLib\";\nimport { Auth } from \"aws-amplify\";\nimport { useHistory } from \"react-router-dom\";\nimport { onError } from \"./libs/errorLib\";\n\nfunction App() {\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  \n  async function handleLogout() {\n    await Auth.signOut();\n  \n    userHasAuthenticated(false);\n    \n    history.push(\"/login\");\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, []);\n  \n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true);\n    }\n    catch(e) {\n      if (e !== 'No current user') {\n        onError(e);\n      }\n    }\n  \n    setIsAuthenticating(false);\n  }\n\n  const history = useHistory();\n\n  return (\n    !isAuthenticating && (\n      <div className=\"App container py-3\">\n        <Navbar collapseOnSelect bg=\"light\" expand=\"md\" className=\"mb-3\">\n          <LinkContainer to=\"/\">\n            <Navbar.Brand className=\"font-weight-bold text-muted\">\n              Cupido Online\n            </Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle />\n          <Navbar.Collapse className=\"justify-content-end\">\n            <Nav  activeKey={window.location.pathname}>\n              {isAuthenticated ? (\n                <>\n                <LinkContainer to=\"/settings\">\n                  <Nav.Link>Configurações</Nav.Link>\n                </LinkContainer>\n                <Nav.Link onClick={handleLogout}>Sair</Nav.Link>\n                </>\n              ) : (\n                <>\n                  <LinkContainer to=\"/register\">\n                    <Nav.Link>Registrar-se</Nav.Link>\n                  </LinkContainer>\n                  <LinkContainer to=\"/login\">\n                    <Nav.Link>Login</Nav.Link>\n                  </LinkContainer>\n                </>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\n          <Routes />\n        </AppContext.Provider>\n      </div>\n    )\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Amplify } from 'aws-amplify';\nimport config from './config';\n\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\n  },\n  Storage: {\n    region: config.s3.REGION,\n    bucket: config.s3.BUCKET,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID\n  },\n  API: {\n    endpoints: [\n      {\n        name: \"messages\",\n        endpoint: config.apiGateway.URL,\n        region: config.apiGateway.REGION\n      },\n    ]\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}